public final class MikromCompilerPluginRegistrar : org/jetbrains/kotlin/compiler/plugin/CompilerPluginRegistrar {
	public fun <init> ()V
	public fun getSupportsK2 ()Z
	public fun registerExtensions (Lorg/jetbrains/kotlin/compiler/plugin/CompilerPluginRegistrar$ExtensionStorage;Lorg/jetbrains/kotlin/config/CompilerConfiguration;)V
}

public final class fir/MikromFirDeclarationGenerationExtension : org/jetbrains/kotlin/fir/analysis/extensions/FirAdditionalCheckersExtension {
	public static final field Companion Lfir/MikromFirDeclarationGenerationExtension$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/fir/FirSession;)V
}

public final class fir/MikromFirDeclarationGenerationExtension$Companion {
}

public final class fir/MikromFirExtensionRegistrar : org/jetbrains/kotlin/fir/extensions/FirExtensionRegistrar {
	public fun <init> ()V
}

public final class ir/MikromIrGenerationExtension : org/jetbrains/kotlin/backend/common/extensions/IrGenerationExtension {
	public fun <init> ()V
	public fun generate (Lorg/jetbrains/kotlin/ir/declarations/IrModuleFragment;Lorg/jetbrains/kotlin/backend/common/extensions/IrPluginContext;)V
	public fun resolveSymbol (Lorg/jetbrains/kotlin/ir/symbols/IrSymbol;Lorg/jetbrains/kotlin/ir/builders/TranslationPluginContext;)Lorg/jetbrains/kotlin/ir/declarations/IrDeclaration;
}

