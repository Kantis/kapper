FILE: Person.kt
    public final fun box(): R|kotlin/String| {
        lval person: R|Person| = Q|Person.RowMapper|.R|/Person.RowMapper.mapRow|(R|kotlin/collections/mapOf|<R|kotlin/String|, R|it(kotlin/Comparable<*> & java/io/Serializable)|>(vararg(String(name).R|kotlin/to|<R|kotlin/String|, R|kotlin/String|>(String(Brian)), String(nickname).R|kotlin/to|<R|kotlin/String|, R|kotlin/String|>(String(bnorm)), String(age).R|kotlin/to|<R|kotlin/String|, R|kotlin/Int|>(Int(-1)))))
        R|kotlin/test/assertEquals|<R|Person|>(R|<local>/person|, R|/Person.Person|(String(Brian), String(bnorm), Int(-1)))
        ^box String(OK)
    }
    @R|com/github/kantis/mikrom/generator/GenerateRowMapper|() public final data class Person : R|kotlin/Any| {
        public constructor(name: R|kotlin/String|, nickname: R|kotlin/String?| = R|<local>/name|, age: R|kotlin/Int| = Int(0)): R|Person| {
            super<R|kotlin/Any|>()
        }

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final val nickname: R|kotlin/String?| = R|<local>/nickname|
            public get(): R|kotlin/String?|

        public final val age: R|kotlin/Int| = R|<local>/age|
            public get(): R|kotlin/Int|

        public final operator fun component1(): R|kotlin/String|

        public final operator fun component2(): R|kotlin/String?|

        public final operator fun component3(): R|kotlin/Int|

        public final fun copy(name: R|kotlin/String| = this@R|/Person|.R|/Person.name|, nickname: R|kotlin/String?| = this@R|/Person|.R|/Person.nickname|, age: R|kotlin/Int| = this@R|/Person|.R|/Person.age|): R|Person|

        public final object RowMapper : R|com/github/kantis/mikrom/KRowMapper<Person>| {
            public final fun mapRow(row: R|kotlin/collections/Map<kotlin/String, kotlin/Any>|): R|Person|

            private constructor(): R|Person.RowMapper|

        }

    }
